[{"/Users/zhaoxiaolong/Documents/share/react_share/my-react/src/index.js":"1","/Users/zhaoxiaolong/Documents/share/react_share/my-react/src/myReact/step1/index.js":"2","/Users/zhaoxiaolong/Documents/share/react_share/my-react/src/myReact/step1/react-dom.js":"3","/Users/zhaoxiaolong/Documents/share/react_share/my-react/src/kreact/react-dom.js":"4","/Users/zhaoxiaolong/Documents/share/react_share/my-react/src/kreact/Component.js":"5","/Users/zhaoxiaolong/Documents/share/react_share/my-react/src/kreact/index.js":"6","/Users/zhaoxiaolong/Documents/share/react_share/my-react/src/kreact/const.js":"7"},{"size":396,"mtime":1610093920512,"results":"8","hashOfConfig":"9"},{"size":604,"mtime":1610093825651,"results":"10","hashOfConfig":"9"},{"size":395,"mtime":1610092681702,"results":"11","hashOfConfig":"9"},{"size":1708,"mtime":1610093469644,"results":"12","hashOfConfig":"9"},{"size":122,"mtime":1610093469640,"results":"13","hashOfConfig":"9"},{"size":976,"mtime":1610093844201,"results":"14","hashOfConfig":"9"},{"size":28,"mtime":1610093469642,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e12b9j",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/zhaoxiaolong/Documents/share/react_share/my-react/src/index.js",[],"/Users/zhaoxiaolong/Documents/share/react_share/my-react/src/myReact/step1/index.js",["34"],"/Users/zhaoxiaolong/Documents/share/react_share/my-react/src/myReact/step1/react-dom.js",["35"],"// vnode--虚拟dom  container宿主原素\nfunction render(vnode,container){\n    console.log(vnode);\n    // 1.vnode转换成node\n    const node = createNode(vnode)\n    // 2.更新dom\n    container.appendChild(node)\n}\n// 创建真是的dom节点\nfunction createNode(vnode){\n    let node\n    const {type}=vnode\n    \n    node = document.createElement(type)\n    return node\n}\nexport default {render}",["36","37"],"/Users/zhaoxiaolong/Documents/share/react_share/my-react/src/kreact/react-dom.js",["38"],"import {TEXT} from \"./const\";\n\n// todo vnode、vvnode 虚拟DOM节点\n// todo node 真实DOM节点\nfunction render(vnode, container) {\n  console.log(\"vnode\", vnode); //sy-log\n\n  // 1. vnode->node\n  const node = createNode(vnode);\n  // 2. container.appendChild(node);\n  container.appendChild(node);\n}\n\n// 创建真实DOM节点\nfunction createNode(vnode) {\n  let node;\n\n  const {type, props} = vnode;\n  if (type === TEXT) {\n    node = document.createTextNode(\"\");\n  } else if (typeof type === \"string\") {\n    node = document.createElement(type);\n  } else if (typeof type === \"function\") {\n    node = type.prototype.isReactComponent\n      ? updateClassComponent(vnode)\n      : updateFunctionComponent(vnode);\n  }\n  reconcileChildren(props.children, node);\n  updateNode(node, props);\n  return node;\n}\n\nfunction updateNode(node, nextVal) {\n  Object.keys(nextVal)\n    .filter(k => k !== \"children\")\n    .forEach(k => {\n      // node.setAttributes(k, nextVal[k]);\n      node[k] = nextVal[k];\n    });\n}\n\n// 返回真实dom节点\n// 执行函数\nfunction updateFunctionComponent(vnode) {\n  const {type, props} = vnode;\n  let vvnode = type(props);\n  const node = createNode(vvnode);\n  return node;\n}\n\n// 返回真实dom节点\n// 先实例化，再执行render函数\nfunction updateClassComponent(vnode) {\n  const {type, props} = vnode;\n  const instance = new type(props);\n  const vvnode = instance.render();\n  const node = createNode(vvnode);\n  return node;\n}\n\n// 遍历下子vnode，然后把子vnode->真实DOM节点，再插入父node中\nfunction reconcileChildren(children, node) {\n  for (let i = 0; i < children.length; i++) {\n    let child = children[i];\n    render(child, node);\n  }\n}\n\nexport default {render};\n","/Users/zhaoxiaolong/Documents/share/react_share/my-react/src/kreact/Component.js",[],"/Users/zhaoxiaolong/Documents/share/react_share/my-react/src/kreact/index.js",["39"],"import {TEXT} from \"./const\";\n\n// 如果是原生标签节点, type是字符串，如div、span\n// 如果是文本节点， type就没有，这里我们为了方便简单自己定义成了TEXT，（源码中没有这么做）\n// 如果是函数组件，type是函数名\n// 如果是类组件，type是类名\nfunction createElement(type, config, ...children) {\n  if (config) {\n    delete config.__self;\n    delete config.__source;\n  }\n  // 今天先不考虑key、ref\n  const props = {\n    ...config,\n    // 这里children为了简单方便，都处理成了数组，（源码当中没有这么做）\n    children: children.map(child =>\n      typeof child === \"object\" ? child : createTextNode(child)\n    )\n  };\n  return {\n    type,\n    props\n  };\n}\n\n// 把文本节点变成对象的形式，方便处理\nfunction createTextNode(text) {\n  return {\n    type: TEXT,\n    props: {\n      nodeValue: text,\n      children: []\n    }\n  };\n}\n\nexport default {createElement};\n","/Users/zhaoxiaolong/Documents/share/react_share/my-react/src/kreact/const.js",[],{"ruleId":"40","severity":1,"message":"41","line":27,"column":1,"nodeType":"42","endLine":27,"endColumn":31},{"ruleId":"40","severity":1,"message":"41","line":17,"column":1,"nodeType":"42","endLine":17,"endColumn":24},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"40","severity":1,"message":"41","line":69,"column":1,"nodeType":"42","endLine":69,"endColumn":25},{"ruleId":"40","severity":1,"message":"41","line":37,"column":1,"nodeType":"42","endLine":37,"endColumn":32},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-global-assign","no-unsafe-negation"]